{"version":3,"sources":["E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/components/inputswitch/inputswitch.ts","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/inputswitch/inputswitch.html","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/inputswitch/inputswitchdemo-routing.module.ts","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/inputswitch/inputswitchdemo.module.ts","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/inputswitch/inputswitchdemo.ts"],"names":[],"mappings":"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","file":"inputswitchdemo.module.chunk.js","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,AfterViewChecked,OnChanges,Input,forwardRef,EventEmitter,Output} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR,ControlValueAccessor} from '@angular/forms';\r\nimport {DomHandler} from '../dom/domhandler';\r\n\r\nexport const INPUTSWITCH_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => InputSwitch),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-inputSwitch',\r\n    template: `\r\n        <div [ngClass]=\"{'ui-inputswitch ui-widget ui-widget-content ui-corner-all': true,\r\n            'ui-state-disabled': disabled,'ui-inputswitch-checked':checked, 'ui-state-focus':focused}\" (click)=\"toggle($event, in)\"\r\n            [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div class=\"ui-inputswitch-off\">\r\n                <span class=\"ui-inputswitch-offlabel\">{{offLabel}}</span>\r\n            </div>\r\n            <div class=\"ui-inputswitch-on\">\r\n                <span class=\"ui-inputswitch-onlabel\">{{onLabel}}</span>\r\n            </div>\r\n            <div [ngClass]=\"{'ui-inputswitch-handle ui-state-default':true, 'ui-state-focus':focused}\"></div>\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input #in type=\"checkbox\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" aria-live=\"polite\" [attr.id]=\"inputId\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" readonly=\"readonly\" [attr.tabindex]=\"tabindex\"/>\r\n            </div>\r\n        </div>\r\n    `,\r\n    providers: [INPUTSWITCH_VALUE_ACCESSOR,DomHandler]\r\n})\r\nexport class InputSwitch implements ControlValueAccessor,AfterViewInit,AfterViewChecked {\r\n\r\n    @Input() onLabel: string = 'On';\r\n\r\n    @Input() offLabel: string = 'Off';\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n    \r\n    @Input() ariaLabelTemplate: string = \"InputSwitch {0}\";\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    checked: boolean = false;\r\n\r\n    focused: boolean = false;\r\n\r\n    onModelChange: Function = () => {};\r\n\r\n    onModelTouched: Function = () => {};\r\n\r\n    public container: any;\r\n\r\n    public handle: any;\r\n\r\n    public onContainer: any;\r\n\r\n    public offContainer: any;\r\n\r\n    public onLabelChild: any;\r\n\r\n    public offLabelChild: any;\r\n\r\n    public offset: any;\r\n    \r\n    public ariaLabel: string;\r\n    \r\n    public ariaLabelledBy: string;\r\n    \r\n    initialized: boolean = false;\r\n\r\n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\r\n\r\n    ngAfterViewInit() {\r\n        this.container = this.el.nativeElement.children[0];\r\n        this.handle = this.domHandler.findSingle(this.el.nativeElement, 'div.ui-inputswitch-handle');\r\n        this.onContainer = this.domHandler.findSingle(this.container,'div.ui-inputswitch-on');\r\n        this.offContainer = this.domHandler.findSingle(this.container,'div.ui-inputswitch-off');\r\n        this.onLabelChild = this.domHandler.findSingle(this.onContainer,'span.ui-inputswitch-onlabel');\r\n        this.offLabelChild = this.domHandler.findSingle(this.offContainer,'span.ui-inputswitch-offlabel');\r\n    }\r\n    \r\n    ngAfterViewChecked() {\r\n        if(this.container && this.container.offsetParent && !this.initialized) {\r\n            this.render();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let\tonContainerWidth =  this.domHandler.width(this.onContainer),\r\n            offContainerWidth = this.domHandler.width(this.offContainer),\r\n            spanPadding\t= this.domHandler.innerWidth(this.offLabelChild) - this.domHandler.width(this.offLabelChild),\r\n            handleMargins = this.domHandler.getOuterWidth(this.handle) - this.domHandler.innerWidth(this.handle);\r\n        \r\n        var containerWidth = (onContainerWidth > offContainerWidth) ? onContainerWidth : offContainerWidth,\r\n            handleWidth = containerWidth;\r\n\r\n        this.handle.style.width = handleWidth + 'px';\r\n        handleWidth = this.domHandler.width(this.handle);\r\n        containerWidth = containerWidth + handleWidth + 6;\r\n\r\n        var labelWidth = containerWidth - handleWidth - spanPadding - handleMargins;\r\n\r\n        this.container.style.width = containerWidth + 'px';\r\n        this.onLabelChild.style.width = labelWidth + 'px';\r\n        this.offLabelChild.style.width = labelWidth + 'px';\r\n        \r\n        //position\r\n        this.offContainer.style.width = (this.domHandler.width(this.container) - 5) + 'px';\r\n        this.offset = this.domHandler.width(this.container) - this.domHandler.getOuterWidth(this.handle);\r\n\r\n        //default value\r\n        if(this.checked) {\r\n            this.handle.style.left = this.offset + 'px';\r\n            this.onContainer.style.width = this.offset + 'px';\r\n            this.offLabelChild.style.marginRight = -this.offset + 'px';\r\n        }\r\n        else {\r\n            this.onContainer.style.width = 0 + 'px';\r\n            this.onLabelChild.style.marginLeft = -this.offset + 'px';\r\n        }\r\n        \r\n        this.initialized = true;\r\n    }\r\n\r\n    toggle(event,checkbox) {\r\n        if(!this.disabled) {\r\n            if(this.checked) {\r\n                this.checked = false;\r\n                this.uncheckUI();\r\n            }\r\n            else {\r\n                this.checked = true;\r\n                this.checkUI();\r\n            }\r\n            \r\n            this.onModelChange(this.checked);\r\n            this.onChange.emit({\r\n                originalEvent: event,\r\n                checked: this.checked\r\n            });\r\n            checkbox.focus();\r\n        }\r\n    }\r\n\r\n    checkUI() {\r\n        this.onContainer.style.width = this.offset + 'px';\r\n        this.onLabelChild.style.marginLeft = 0 + 'px';\r\n        this.offLabelChild.style.marginRight = -this.offset + 'px';\r\n        this.handle.style.left = this.offset + 'px';\r\n        this.updateAriaLabel();\r\n    }\r\n\r\n    uncheckUI() {\r\n        this.onContainer.style.width = 0 + 'px';\r\n        this.onLabelChild.style.marginLeft = -this.offset + 'px';\r\n        this.offLabelChild.style.marginRight = 0 + 'px';\r\n        this.handle.style.left = 0 + 'px';\r\n        this.updateAriaLabel();\r\n    }\r\n\r\n    onFocus(event) {\r\n        this.focused = true;\r\n    }\r\n\r\n    onBlur(event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n    }\r\n\r\n    writeValue(checked: any) : void {\r\n        this.checked = checked;\r\n        \r\n        if(this.initialized) {\r\n            if(this.checked === true)\r\n                this.checkUI();\r\n            else\r\n                this.uncheckUI();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n    }\r\n    \r\n    updateAriaLabel() {\r\n        let pattern = /{(.*?)}/,\r\n        value = this.checked ? this.onLabel : this.offLabel;\r\n        \r\n        this.ariaLabel = this.ariaLabelTemplate.replace(this.ariaLabelTemplate.match(pattern)[0], value);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [InputSwitch],\r\n    declarations: [InputSwitch]\r\n})\r\nexport class InputSwitchModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/components/inputswitch/inputswitch.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">InputSwitch</span>\\r\\n        <span>InputSwitch is used to select a boolean value.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3 class=\\\"first\\\">Basic - {{checked1}}</h3>\\r\\n    <p-inputSwitch [(ngModel)]=\\\"checked1\\\"></p-inputSwitch>\\r\\n\\r\\n    <h3>Labels - {{checked2}}</h3>\\r\\n    <p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" [(ngModel)]=\\\"checked2\\\"></p-inputSwitch>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;InputSwitchModule&#125; from 'primeng/primeng';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>Two-way binding to a boolean property is defined using the standard ngModel directive.</p>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-inputSwitch [(ngModel)]=\\\"checked\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class ModelComponent &#123;\\r\\n\\r\\n    checked: boolean;\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <p>As model is two-way binding enabled, setting the bound value as true displays the state as checked by default.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class ModelComponent &#123;\\r\\n\\r\\n   checked: boolean = true;\\r\\n\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Model Driven Forms</h3>\\r\\n            <p>InputSwitch can be used in a model driven form as well.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-inputSwitch formControlName=\\\"enabled\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Customization</h3>\\r\\n            <p>Labels can be customized using onLabel and offLabel properties.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-inputSwitch onLabel=\\\"I confirm\\\" offLabel=\\\"I reject\\\" [(ngModel)]=\\\"val\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>On</td>\\r\\n                            <td>Label for the on state.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>offLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Off</td>\\r\\n                            <td>Label for the off state.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td>tabindex</td>\\r\\n                          <td>number</td>\\r\\n                          <td>null</td>\\r\\n                          <td>Index of the element in tabbing order.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>inputId</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Identifier of the focus input to match a label defined for the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ariaLabelTemplate</td>\\r\\n                            <td>string</td>\\r\\n                            <td>InputSwitch &#123;0&#125;</td>\\r\\n                            <td>The aria-label template is used to define a string that labels the current element with a template.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Parameters</th>\\r\\n                        <th>Description</th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                    <tr>\\r\\n                        <td>onChange</td>\\r\\n                        <td>event.originalEvent: browser event<br>\\r\\n                            event.checked: checked state as a boolean</td>\\r\\n                        <td>Callback to invoke on state change.</td>\\r\\n                    </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-inputSwitch (onChange)=\\\"handleChange($event)\\\" [(ngModel)]=\\\"val\\\"&gt;\\r\\n</code>\\r\\n</pre>\\r\\n <pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class ModelComponent &#123;\\r\\n\\r\\n    handleChange(e) &#123;\\r\\n        var isChecked = e.checked;\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-inputswitch</td>\\r\\n                            <td>Container element</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-inputswitch-on</td>\\r\\n                            <td>Checked state element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-inputswitch-off</td>\\r\\n                            <td>Unchecked state element.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/inputswitch\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3 class=\\\"first\\\"&gt;Basic - {{checked1}}&lt;/h3&gt;\\r\\n&lt;p-inputSwitch [(ngModel)]=\\\"checked1\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n\\r\\n&lt;h3&gt;Labels - &lt;span&gt; {{checked2}}&lt;/h3&gt;\\r\\n&lt;p-inputSwitch onLabel=\\\"Yes\\\" offLabel=\\\"No\\\" [(ngModel)]=\\\"checked2\\\"&gt;&lt;/p-inputSwitch&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class InputSwitchDemo &#123;\\r\\n\\r\\n    checked1: boolean = false;\\r\\n\\r\\n    checked2: boolean = true;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/inputswitch/inputswitch.html\n// module id = ../../../../../src/app/showcase/components/inputswitch/inputswitch.html\n// module chunks = inputswitchdemo.module","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {InputSwitchDemo} from './inputswitchdemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: InputSwitchDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class InputSwitchDemoRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/inputswitch/inputswitchdemo-routing.module.ts","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule}    from '@angular/forms';\r\nimport {InputSwitchDemo} from './inputswitchdemo';\r\nimport {InputSwitchDemoRoutingModule} from './inputswitchdemo-routing.module';\r\nimport {InputSwitchModule} from '../../../components/inputswitch/inputswitch';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n        FormsModule,\r\n\t\tInputSwitchDemoRoutingModule,\r\n        InputSwitchModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tInputSwitchDemo\r\n\t]\r\n})\r\nexport class InputSwitchDemoModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/inputswitch/inputswitchdemo.module.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './inputswitch.html'\r\n})\r\nexport class InputSwitchDemo {\r\n\r\n    checked1: boolean = false;\r\n\r\n    checked2: boolean = true;\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/inputswitch/inputswitchdemo.ts"],"sourceRoot":"webpack:///"}