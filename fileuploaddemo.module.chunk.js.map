{"version":3,"sources":["E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/fileupload/fileuploaddemo.html","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/fileupload/fileuploaddemo.module.ts","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/fileupload/fileuploaddemo.ts"],"names":[],"mappings":"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","file":"fileuploaddemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {FileUploadDemo} from './fileuploaddemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: FileUploadDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class FileUploadDemoRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/fileupload/fileuploaddemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">FileUpload</span>\\r\\n        <span>FileUpload is an advanced uploader with dragdrop support, multi file uploads, auto uploading, progress tracking and\\r\\n            validations.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n        \\r\\n    <h3 class=\\\"first\\\">Advanced</h3>\\r\\n    <p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\" \\r\\n            multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"> \\r\\n            <ng-template pTemplate=\\\"content\\\">\\r\\n                <ul *ngIf=\\\"uploadedFiles.length\\\">\\r\\n                    <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\r\\n                </ul>\\r\\n            </ng-template>    \\r\\n    </p-fileUpload>\\r\\n    \\r\\n    <h3>Basic</h3>\\r\\n    <p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"></p-fileUpload>\\r\\n    \\r\\n    <h3>Basic with Auto</h3>\\r\\n    <p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" auto=\\\"true\\\" chooseLabel=\\\"Browse\\\"></p-fileUpload>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;FileUploadModule&#125; from 'primeng/primeng';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>FileUpload requires a url property as the upload target and a name to identify the files at backend.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Multiple Uploads</h3>\\r\\n            <p>Only one file can be selected at a time, to allow selecting multiples enable multiple option.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>DragDrop</h3>\\r\\n            <p>File selection can also be done by dragging and dropping one or more to the content section of the component.</p>\\r\\n            \\r\\n            <h3>Auto Uploads</h3>\\r\\n            <p>When auto property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" auto=\\\"auto\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>File Types</h3>\\r\\n            <p>Selectable file types can be restricted with accept property, example below only allows images to be uploaded.\\r\\n            Read more about other possible values <a href=\\\"http://www.w3schools.com/tags/att_input_accept.asp\\\">here</a>.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>File Size</h3>\\r\\n            <p>Maximium file size can be restricted using maxFileSize property defined in bytes.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <p>In order to customize the default messages use invalidFileSizeMessageSummary and invalidFileSizeMessageDetail options. \\r\\n            In summary &#123;0&#125; placeholder refers to the filename and in detail, file size.</p>\\r\\n            <ul>\\r\\n                <li>invalidFileSizeMessageSummary: '&#123;0&#125;: Invalid file size, '</li>\\r\\n                <li>invalidFileSizeMessageDetail: string = 'maximum upload size is &#123;0&#125;.'</li>\\r\\n            </ul>\\r\\n            \\r\\n            <h3>Templating</h3>\\r\\n            <p>File list UI is customizable using a ng-template called \\\"file\\\" that gets the <a href=\\\"https://www.w3.org/TR/FileAPI/\\\">File</a> instance as the implicit variable.\\r\\n                Second ng-template named \\\"content\\\" can be used to place custom content inside the content section which would be useful to implement a user interface to manage the uploaded files such as removing them.  \\r\\n                Third and final ng-template option is \\\"toolbar\\\" to display custom content at toolbar.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" url=\\\"./upload.php\\\" multiple=\\\"multiple\\\"\\r\\n        accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\r\\n        &lt;ng-template pTemplate=\\\"toolbar\\\"&gt;\\r\\n            &lt;div&gt;Upload 3 Files&lt;/div&gt;\\r\\n        &lt;/ng-template&gt;  \\r\\n        &lt;ng-template let-file pTemplate=\\\"file\\\"&gt;\\r\\n            &lt;div&gt;Custom UI to display a file&lt;/div&gt;\\r\\n        &lt;/ng-template&gt; \\r\\n        &lt;ng-template pTemplate=\\\"content\\\"&gt;\\r\\n            &lt;div&gt;Custom UI to manage uploaded files&lt;/div&gt;\\r\\n        &lt;/ng-template&gt;  \\r\\n&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Request Customization</h3>\\r\\n            <p>XHR request to upload the files can be customized using the onBeforeUpload callback that passes\\r\\n                the xhr instance and FormData object as event parameters.</p>\\r\\n                \\r\\n            <h3>Basic UI</h3>\\r\\n            <p>FileUpload basic mode provides a simpler UI as an alternative to advanced mode.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\" auto=\\\"true\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n            <h3>Custom Upload</h3>\\r\\n            <p>Uploading implementation can be overriden by enabling customMode property and defining a custom upload handler event.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-fileUpload name=\\\"myfile[]\\\" customUpload=\\\"true\\\" (uploadHandler)=\\\"myUploader($event)\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nmyUploader(event) &#123;\\r\\n    //event.files == files to upload\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n            \\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>name</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Name of the request parameter to identify the files at backend.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>url</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Remote url to upload the files.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>method</td>\\r\\n                            <td>string</td>\\r\\n                            <td>POST</td>\\r\\n                            <td>HTTP method to send the files to the url.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>multiple</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Used to select multiple files at once from file dialog.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>accept</td>\\r\\n                            <td>string</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Pattern to restrict the allowed file types such as \\\"image/*\\\".</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>disabled</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Disables the upload functionality.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>auto</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>When enabled, upload begins automatically after selection is completed.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>maxFileSize</td>\\r\\n                            <td>number</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Maximum file size allowed in bytes.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileSizeMessageSummary</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"&#123;0&#125;: Invalid file size, \\\"</td>\\r\\n                            <td>Summary message of the invalid fize size.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileSizeMessageDetail</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"maximum upload size is &#123;0&#125;.\\\"</td>\\r\\n                            <td>Detail message of the invalid fize size.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileTypeMessageSummary</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"&#123;0&#125;: Invalid file type, \\\"</td>\\r\\n                            <td>Summary message of the invalid fize type.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>invalidFileTypeMessageDetail</td>\\r\\n                            <td>string</td>\\r\\n                            <td>\\\"allowed file types: &#123;0&#125;.\\\"</td>\\r\\n                            <td>Detail message of the invalid fize type.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>previewWidth</td>\\r\\n                            <td>number</td>\\r\\n                            <td>50</td>\\r\\n                            <td>Width of the image thumbnail in pixels.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>chooseLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Choose</td>\\r\\n                            <td>Label of the choose button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>uploadLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Upload</td>\\r\\n                            <td>Label of the upload button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>cancelLabel</td>\\r\\n                            <td>string</td>\\r\\n                            <td>Cancel</td>\\r\\n                            <td>Label of the cancel button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>withCredentials</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>mode</td>\\r\\n                            <td>string</td>\\r\\n                            <td>advanced</td>\\r\\n                            <td>Defines the UI of the component, possible values are \\\"advanced\\\" and \\\"basic\\\".</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>customUpload</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Whether to use the default upload or a manual implementation defined in uploadHandler callback.</td>\\r\\n                        </tr>\\r\\n                      <tr>\\r\\n                            <td>showUploadButton</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Defines the visibility of upload button for Client-side FileUpload.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>showCancelButton</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>true</td>\\r\\n                            <td>Defines the visibility of cancel button for Client-side FileUpload.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>files</td>\\r\\n                            <td>array</td>\\r\\n                            <td>null</td>\\r\\n                            <td>List of files to be provide to the FileUpload externally.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onBeforeUpload</td>\\r\\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\\r\\n                                event.formData: FormData object.</td>\\r\\n                            <td>Callback to invoke before file upload begins to customize the request\\r\\n                                such as post parameters before the files.</td>\\r\\n                        </tr>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n                            <td>onBeforeSend</td>\\r\\n                            <td>event.xhr: XmlHttpRequest instance. <br/>\\r\\n                                event.formData: FormData object.</td>\\r\\n                            <td>Callback to invoke before file send begins to customize the request\\r\\n                                such as adding headers.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onUpload</td>\\r\\n                            <td>event.xhr: XmlHttpRequest instance.<br />\\r\\n                                event.files: Uploaded files.</td>\\r\\n                            <td>Callback to invoke when file upload is complete.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onError</td>\\r\\n                            <td>event.xhr: XmlHttpRequest instance.<br />\\r\\n                                event.files: Files that are not uploaded.</td>\\r\\n                            <td>Callback to invoke if file upload fails.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onClear</td>\\r\\n                            <td>-.</td>\\r\\n                            <td>Callback to invoke when files in queue are removed without uploading using clear all button.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onRemove</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.file: Selected file.</td>\\r\\n                            <td>Callback to invoke when a file is removed without uploading using clear button of a file.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onSelect</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.files: List of selected files.</td>\\r\\n                            <td>Callback to invoke when files are selected.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onProgress</td>\\r\\n                            <td>event.originalEvent: Original browser event. <br />\\r\\n                                event.progress: Calculated progress value.</td>\\r\\n                            <td>Callback to invoke when files are selected.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>uploadHandler</td>\\r\\n                            <td>event.files: List of selected files.</td>\\r\\n                            <td>Callback to invoke in custom upload mode to upload the files manually.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            \\r\\n            <h3>Methods</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>upload</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Uploads the selected files.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>clear</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Clears the files list.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload</td>\\r\\n                            <td>Container element</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload-buttonbar</td>\\r\\n                            <td>Header containing the buttons</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-fileupload-content</td>\\r\\n                            <td>Content section</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/fileupload\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-growl [value]=\\\"msgs\\\"&gt;&lt;/p-growl&gt;\\r\\n    \\r\\n&lt;h3 class=\\\"first\\\"&gt;Advanced&lt;/h3&gt;\\r\\n&lt;p-fileUpload name=\\\"demo[]\\\" url=\\\"./upload.php\\\" (onUpload)=\\\"onUpload($event)\\\" \\r\\n        multiple=\\\"multiple\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\"&gt;\\r\\n    &lt;ng-template pTemplate=\\\"content\\\"&gt;\\r\\n        &lt;ul *ngIf=\\\"uploadedFiles.length\\\"&gt;\\r\\n            &lt;li *ngFor=\\\"let file of uploadedFiles\\\"&gt;&#123;&#123;file.name&#125;&#125; - &#123;&#123;file.size&#125;&#125; bytes&lt;/li&gt;\\r\\n        &lt;/ul&gt;\\r\\n    &lt;/ng-template&gt;        \\r\\n&lt;/p-fileUpload&gt;\\r\\n\\r\\n&lt;h3&gt;Basic&lt;/h3&gt;\\r\\n&lt;p-fileUpload mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUpload($event)\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n\\r\\n&lt;h3&gt;Basic with Auto&lt;/h3&gt;\\r\\n&lt;p-fileUpload #fubauto mode=\\\"basic\\\" name=\\\"demo[]\\\" url=\\\"./upload.php\\\" accept=\\\"image/*\\\" maxFileSize=\\\"1000000\\\" (onUpload)=\\\"onBasicUploadAuto($event)\\\" auto=\\\"true\\\" chooseLabel=\\\"Browse\\\"&gt;&lt;/p-fileUpload&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class FileUploadDemo &#123;\\r\\n\\r\\n    msgs: Message[];\\r\\n    \\r\\n    uploadedFiles: any[] = [];\\r\\n\\r\\n    onUpload(event) &#123;\\r\\n        for(let file of event.files) &#123;\\r\\n            this.uploadedFiles.push(file);\\r\\n        &#125;\\r\\n    \\r\\n        this.msgs = [];\\r\\n        this.msgs.push(&#123;severity: 'info', summary: 'File Uploaded', detail: ''&#125;);\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/fileupload/fileuploaddemo.html\n// module id = ../../../../../src/app/showcase/components/fileupload/fileuploaddemo.html\n// module chunks = fileuploaddemo.module","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FileUploadDemo} from './fileuploaddemo';\r\nimport {FileUploadDemoRoutingModule} from './fileuploaddemo-routing.module';\r\nimport {FileUploadModule} from '../../../components/fileupload/fileupload';\r\nimport {GrowlModule} from '../../../components/growl/growl';\r\nimport {ButtonModule} from '../../../components/button/button';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFileUploadDemoRoutingModule,\r\n        FileUploadModule,\r\n        GrowlModule,\r\n        ButtonModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tFileUploadDemo\r\n\t]\r\n})\r\nexport class FileUploadDemoModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/fileupload/fileuploaddemo.module.ts","import {Component} from '@angular/core';\r\nimport {Message} from '../../../components/common/api';\r\n\r\n@Component({\r\n    templateUrl: './fileuploaddemo.html'\r\n})\r\nexport class FileUploadDemo {\r\n\r\n    msgs: Message[];\r\n    \r\n    uploadedFiles: any[] = [];\r\n\r\n    onUpload(event) {\r\n        for(let file of event.files) {\r\n            this.uploadedFiles.push(file);\r\n        }\r\n        \r\n        this.msgs = [];\r\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n    \r\n    onBasicUpload(event) {        \r\n        this.msgs = [];\r\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded with Basic Mode'});\r\n    }\r\n    \r\n    onBasicUploadAuto(event) {        \r\n        this.msgs = [];\r\n        this.msgs.push({severity: 'info', summary: 'Success', detail: 'File Uploaded with Auto Mode'});\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/fileupload/fileuploaddemo.ts"],"sourceRoot":"webpack:///"}