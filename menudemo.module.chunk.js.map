{"version":3,"sources":["E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/menu/menudemo-routing.module.ts","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/menu/menudemo.html","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/menu/menudemo.module.ts","E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/menu/menudemo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACC;AACR;AAYpC;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QAVjC,uEAAQ,CAAC;YACT,OAAO,EAAE;gBACR,qEAAY,CAAC,QAAQ,CAAC;oBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,2DAAQ,EAAC;iBAC7B,CAAC;aACF;YACD,OAAO,EAAE;gBACR,qEAAY;aACZ;SACD,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;ACdlC,m2BAAm2B,yBAAyB,wBAAwB,sZAAsZ,4BAA4B,IAAI,WAAW,8HAA8H,kCAAkC,6BAA6B,wDAAwD,mCAAmC,+BAA+B,wCAAwC,+BAA+B,uCAAuC,sBAAsB,cAAc,UAAU,+OAA+O,kCAAkC,6BAA6B,gCAAgC,gFAAgF,mCAAmC,2BAA2B,wCAAwC,mCAAmC,mBAAmB,gFAAgF,uCAAuC,2BAA2B,sCAAsC,mCAAmC,EAAE,cAAc,UAAU,8UAA8U,kDAAkD,IAAI,WAAW,QAAQ,qGAAqG,IAAI,WAAW,ipKAAipK,sBAAsB,SAAS,OAAO,QAAQ,4BAA4B,IAAI,WAAW,YAAY,MAAM,SAAS,OAAO,QAAQ,kDAAkD,IAAI,WAAW,QAAQ,qGAAqG,IAAI,WAAW,8HAA8H,kCAAkC,6BAA6B,gCAAgC,gFAAgF,mCAAmC,2BAA2B,wCAAwC,mCAAmC,mBAAmB,gFAAgF,uCAAuC,2BAA2B,sCAAsC,mCAAmC,EAAE,cAAc,UAAU,6E;;;;;;;;;;;;;;;;;;;;;;;;ACAtsS;AACE;AACT;AAC4B;AACR;AACO;AAAA,CAAC;AACE;AACwB;AAe1F;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAb1B,uEAAQ,CAAC;YACT,OAAO,EAAE;gBACR,qEAAY;gBACZ,uFAAqB;gBACf,yEAAU;gBACV,+EAAY;gBACZ,kFAAa;gBACb,0GAAqB;aAC3B;YACD,YAAY,EAAE;gBACb,2DAAQ;aACR;SACD,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;ACtBa;AAMxC;IAAA;IAoBA,CAAC;IAhBG,2BAAQ,GAAR;QACI,IAAI,CAAC,KAAK,GAAG,CAAC;gBACV,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE;oBACH,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,cAAO,CAAC,EAAC;oBAClD,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAC;iBACvC;aACJ;YACD;gBACI,KAAK,EAAE,MAAM;gBACb,KAAK,EAAE;oBACH,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAC;oBACnC,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAC;iBACrC;aACJ,CAAC,CAAC;IACP,CAAC;IAnBQ,QAAQ;QAHpB,wEAAS,CAAC;;SAEV,CAAC;OACW,QAAQ,CAoBpB;IAAD,eAAC;CAAA;AApBoB","file":"menudemo.module.chunk.js","sourcesContent":["import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {MenuDemo} from './menudemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: MenuDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class MenuDemoRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/menu/menudemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">Menu</span>\\r\\n        <span>Menu is a navigation/command component that supports dynamic and static positioning.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3 class=\\\"first\\\">Basic</h3>\\r\\n    <p-menu [model]=\\\"items\\\"></p-menu>\\r\\n\\r\\n    <h3>Popup</h3>\\r\\n    <p-menu #menu popup=\\\"popup\\\" [model]=\\\"items\\\"></p-menu>\\r\\n    <button type=\\\"button\\\" pButton icon=\\\"fa fa-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"></button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;MenuModule,MenuItem&#125; from 'primeng/primeng';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>MenuModel API</h3>\\r\\n            <p>Menu uses the common menumodel api to define its items, visit <a [routerLink]=\\\"['/menumodel']\\\">MenuModel API</a> for details.</p>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>Menu requires a collection of menuitems as its model.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-menu [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MenuDemo &#123;\\r\\n    \\r\\n    items: MenuItem[];\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.items = [\\r\\n                    &#123;label: 'New', icon: 'fa-plus'&#125;,\\r\\n                    &#123;label: 'Open', icon: 'fa-download'&#125;,\\r\\n                    &#123;label: 'Undo', icon: 'fa-refresh'&#125;\\r\\n                ];\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>SubMenus</h3>\\r\\n            <p>Menu supports 1 level of nesting via subitems of an item.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MenuDemo &#123;\\r\\n    \\r\\n    items: MenuItem[];\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.items = [&#123;\\r\\n            label: 'File',\\r\\n            items: [\\r\\n                &#123;label: 'New', icon: 'fa-plus'&#125;,\\r\\n                &#123;label: 'Open', icon: 'fa-download'&#125;\\r\\n            ]\\r\\n        &#125;,\\r\\n        &#123;\\r\\n            label: 'Edit',\\r\\n            items: [\\r\\n                &#123;label: 'Undo', icon: 'fa-refresh'&#125;,\\r\\n                &#123;label: 'Redo', icon: 'fa-repeat'&#125;\\r\\n            ]\\r\\n        &#125;];\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Popup Mode</h3>\\r\\n            <p>Menu is inline by default, popup mode is also supported by enabling popup property and calling toggle method by passing the event \\r\\n                    from the anchor element.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-menu #menu popup=\\\"popup\\\" [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\r\\n&lt;button type=\\\"button\\\" pButton icon=\\\"fa fa-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\r\\n</code>\\r\\n</pre>\\r\\n       \\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Type</th>\\r\\n                        <th>Default</th>\\r\\n                        <th>Description</th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>model</td>\\r\\n                            <td>array</td>\\r\\n                            <td>null</td>\\r\\n                            <td>An array of menuitems.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>popup</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Defines if menu would displayed as a popup.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>appendTo</td>\\r\\n                            <td>any</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Target element to attach the overlay, valid values are \\\"body\\\" or a local ng-template variable of another element.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            \\r\\n            <h3>Methods</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>toggle</td>\\r\\n                            <td>event: browser event</td>\\r\\n                            <td>Toggles the visibility of the popup menu.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>show</td>\\r\\n                            <td>event: browser event</td>\\r\\n                            <td>Displays the popup menu.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>hide</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Hides the popup menu.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-menu</td>\\r\\n                            <td>Container element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-menu-list</td>\\r\\n                            <td>List element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-menuitem</td>\\r\\n                            <td>Menuitem element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-menuitem-text</td>\\r\\n                            <td>Label of a menuitem.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-menuitem-icon</td>\\r\\n                            <td>Icon of a menuitem.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/menu\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\r\\n&lt;p-menu [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\r\\n\\r\\n&lt;h3&gt;Popup&lt;/h3&gt;\\r\\n&lt;p-menu #menu popup=\\\"popup\\\" [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\r\\n&lt;button type=\\\"button\\\" pButton icon=\\\"fa fa-list\\\" label=\\\"Show\\\" (click)=\\\"menu.toggle($event)\\\"&gt;&lt;/button&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MenuDemo &#123;\\r\\n    \\r\\n    items: MenuItem[];\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.items = [&#123;\\r\\n            label: 'File',\\r\\n            items: [\\r\\n                &#123;label: 'New', icon: 'fa-plus'&#125;,\\r\\n                &#123;label: 'Open', icon: 'fa-download'&#125;\\r\\n            ]\\r\\n        &#125;,\\r\\n        &#123;\\r\\n            label: 'Edit',\\r\\n            items: [\\r\\n                &#123;label: 'Undo', icon: 'fa-refresh'&#125;,\\r\\n                &#123;label: 'Redo', icon: 'fa-repeat'&#125;\\r\\n            ]\\r\\n        &#125;];\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/menu/menudemo.html\n// module id = ../../../../../src/app/showcase/components/menu/menudemo.html\n// module chunks = menudemo.module","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MenuDemo} from './menudemo';\r\nimport {MenuDemoRoutingModule} from './menudemo-routing.module';\r\nimport {MenuModule} from '../../../components/menu/menu'\r\nimport {ButtonModule} from '../../../components/button/button';;\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tMenuDemoRoutingModule,\r\n        MenuModule,\r\n        ButtonModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tMenuDemo\r\n\t]\r\n})\r\nexport class MenuDemoModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/menu/menudemo.module.ts","import {Component} from '@angular/core';\r\nimport {MenuItem} from '../../../components/common/api';\r\n\r\n@Component({\r\n    templateUrl: './menudemo.html'\r\n})\r\nexport class MenuDemo {\r\n    \r\n    items: MenuItem[];\r\n\r\n    ngOnInit() {\r\n        this.items = [{\r\n            label: 'File',\r\n            items: [\r\n                {label: 'New', icon: 'fa-plus', command: () => {}},\r\n                {label: 'Open', icon: 'fa-download'}\r\n            ]\r\n        },\r\n        {\r\n            label: 'Edit',\r\n            items: [\r\n                {label: 'Undo', icon: 'fa-refresh'},\r\n                {label: 'Redo', icon: 'fa-repeat'}\r\n            ]\r\n        }];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/TypeScript/tmdt/RMDTADMIN/SellAdmin/src/app/showcase/components/menu/menudemo.ts"],"sourceRoot":"webpack:///"}